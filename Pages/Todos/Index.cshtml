@page
@model ToDotNet.Pages.Todos.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Todo(s)</h1>

<form>
        Category: 
        <input type="text" asp-for="CategorySearchString" />
        <input type="hidden" name="uid" value="@ViewData["UserId"]" />
        <button type="submit" class="btn btn-success">Search</button>
        <a class="btn btn-primary" asp-page="Create" asp-route-uid="@ViewData["UserId"]">Create New</a>
</form>


<h3>Showing results for: @Html.Raw(Model.CategorySearchString)</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].Due)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todo[0].IsCompleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Todo) {
        <tr>
            <td>
                @Html.Raw(item.Title)
            </td>
            <td>
                @Html.Raw(item.Description)
            </td>
            <td>
                @Html.Raw(item.Created)
            </td>
            <td>
                @Html.Raw(item.Due)
            </td>
            <td>
                @Html.Raw(item.Category)
            </td>
            <td>
                @Html.Raw(item.IsCompleted)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
